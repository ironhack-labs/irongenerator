<% if (strict) { -%>
  'use strict';

<% } -%>
const path = require('path');
const express = require('express');
const createError = require('http-errors');
<% Object.keys(modules).sort().forEach(variable => { -%>
  const <%- variable %> = require('<%- modules[variable] %>');
<% }); -%>
<% Object.keys(localModules).sort().forEach(variable => { -%>
  const <%- variable %> = require('<%- localModules[variable] %>');
<% }); -%>
<% routers.forEach(router => { -%>
  const <%- router.name %> = require('<%- router.location %>');
<% }); -%>

const app = express();

<% if (view) { -%>
  app.set('views', path.join(__dirname, 'views'));
  app.set('view engine', '<%- view.engine %>');

<% } -%>
<% uses.forEach(use => { -%>
  app.use(<%- use %>);
<% }); -%>
<% mounts.forEach(mount => { -%>
  app.use(<%= mount.path %>, <%- mount.code %>);
<% }); -%>

<% routers.forEach(router => { -%>
  app.use('<%- router.path %>', <%- router.name %>);
<% }); -%>

// Catch missing routes and forward to error handler
app.use((req, res, next) => {
  next(createError(404));
});

// Catch all error handler
app.use((error, req, res, next) => {
  <% if (architecture === 'mvc') { -%>
    // Set error information, with stack only available in development
    res.locals.message = error.message;
    res.locals.error = req.app.get('env') === 'development' ? error : {};
  <% } -%>
  res.status(error.status || 500);
  <% if (architecture === 'mvc') { -%>
    <% if (template) { -%>
      res.render('error');
    <% } -%>
  <% } else if (architecture === 'api') { -%>
    res.json({ type: 'error', error: { message: error.message } });
  <% } -%>
});

module.exports = app;
